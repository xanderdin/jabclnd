<?xml version="1.0" encoding="UTF-8"?>

<!--
    This file stores bootstrap properties needed by Openfire.
    Property names must be in the format: "prop.name.is.blah=value"
    That will be stored as:
        <prop>
            <name>
                <is>
                    <blah>value</blah>
                </is>
            </name>
        </prop>

    Most properties are stored in the Openfire database. A
    property viewer and editor is included in the admin console.
-->
<!-- root element, all properties must be under this element -->
<jive> 
  <adminConsole> 
    <!-- Disable either port by setting the value to -1 -->  
    <port>9090</port>  
    <securePort>9091</securePort> 
  </adminConsole>  
  <locale>en</locale>  
  <!-- Network settings. By default, Openfire will bind to all network interfaces.
      Alternatively, you can specify a specific network interfaces that the server
      will listen on. For example, 127.0.0.1. This setting is generally only useful
       on multi-homed servers. -->  
  <!--
    <network>
        <interface></interface>
    </network>
    -->  
  <!-- SPDY  Protocol is npn. 
    	(note: npn does not work with Java 8) 
    	add -Xbootclasspath/p:/OPENFIRE_HOME/lib/npn-boot.jar to .vmoptions file    -->  
  <!--     
    <spdy> 
    	<protocol>npn</protocol> 
    </spdy> 
    -->  
  <connectionProvider> 
    <className>org.jivesoftware.database.EmbeddedConnectionProvider</className> 
  </connectionProvider>  
  <setup>true</setup>

  <!-- Section start: Get users and auth from custom DB -->
  <jdbcProvider>
	<driver>org.postgresql.Driver</driver>
	<connectionString>jdbc:postgresql://localhost:5432/jabclnd?user=jabclnd&amp;password=password</connectionString>
  </jdbcProvider>
  <provider>
	<auth>
	  <className>org.jivesoftware.openfire.auth.JDBCAuthProvider</className>
	</auth>
	<user>
	  <className>org.jivesoftware.openfire.user.JDBCUserProvider</className>
	</user>
  </provider>
  <jdbcAuthProvider>
	<passwordSQL>SELECT password FROM openfire_users_view WHERE username=?</passwordSQL>
	<passwordType>md5</passwordType>
  </jdbcAuthProvider>
  <jdbcUserProvider>
	<loadUserSQL>SELECT name, email FROM openfire_users_view WHERE username=?</loadUserSQL>
	<userCountSQL>SELECT COUNT(*) FROM openfire_users_view</userCountSQL>
	<allUsersSQL>SELECT username FROM openfire_users_view</allUsersSQL>
	<searchSQL>SELECT username FROM openfire_users_view WHERE</searchSQL>
	<usernameField>username</usernameField>
	<nameField>name</nameField>
	<emailField>email</emailField>
  </jdbcUserProvider>
  <!-- Section end: Get users and auth from custom DB -->
  
</jive>
